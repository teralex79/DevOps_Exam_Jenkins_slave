#!/bin/bash

set -xe

# Usage:
# If public keys was added into container
#  docker run teralex79/devops_exam:jenkins_s-1.10
# or
#  docker run teralex79/devops_exam:jenkins_s-1.10 <public key>
# or
#  docker run -e "JENKINS_SLAVE_SSH_PUBKEY=<public key>" teralex79/devops_exam:jenkins_s-1.10

var=( $(ls .ssh/ | grep .pub | wc -l) )

if [[ ${var} -gt 0 ]]; then

    mkdir -p "${JENKINS_AGENT_HOME}/.ssh"
    cat ${JENKINS_AGENT_HOME}/.ssh/*.pub > "${JENKINS_AGENT_HOME}/.ssh/authorized_keys"
    chown -Rf jenkins:jenkins "${JENKINS_AGENT_HOME}/.ssh"
    chmod 0700 -R "${JENKINS_AGENT_HOME}/.ssh"
fi

write_key() {
    mkdir -p "${JENKINS_AGENT_HOME}/.ssh"
    echo "$1" >> "${JENKINS_AGENT_HOME}/.ssh/authorized_keys"
    chown -Rf jenkins:jenkins "${JENKINS_AGENT_HOME}/.ssh"
    chmod 0700 -R "${JENKINS_AGENT_HOME}/.ssh"
}

if [[ $JENKINS_SLAVE_SSH_PUBKEY == ssh-* ]]; then
  write_key "${JENKINS_SLAVE_SSH_PUBKEY}"
fi
if [[ $# -gt 0 ]]; then
  if [[ $1 == ssh-* ]]; then
    write_key "$1"
    shift 1
  else
    exec "$@"
  fi
fi

# ensure variables passed to docker container are also exposed to ssh sessions
env | grep _ >> /etc/environment

ssh-keygen -A
exec /usr/sbin/sshd -D -e "${@}"
